includes:
    - vendor/phpstan/phpstan-webmozart-assert/extension.neon
    - vendor/phpstan/phpstan-strict-rules/rules.neon
    - vendor/thecodingmachine/phpstan-safe-rule/phpstan-safe-rule.neon

parameters:
    level: max
    reportUnmatchedIgnoredErrors: false
    ignoreErrors:
        # symfony/process version testing
        -
            message: "#^Call to function method_exists\\(\\) with Symfony\\\\Component\\\\Process\\\\Process and 'inheritEnvironmentV…' will always evaluate to true#"
            path: %currentWorkingDirectory%/src/Utils/ProcessRunner.php

        # webmozart/assert missanalysis
        -
            message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:allIsInstanceOf\\(\\) with iterable\\<PhpSpellcheck\\\\Source\\\\SourceInterface\\> and 'PhpSpellcheck…' will always evaluate to true\\.$#"
            path: %currentWorkingDirectory%/src/Source/MultipleSource.php
        -
            message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:stringNotEmpty\\(\\) with string will always evaluate to true\\.$#"
            path: %currentWorkingDirectory%/src/Misspelling.php
        -
            message: "#^Instanceof between PhpSpellcheck\\\\Source\\\\SourceInterface and PhpSpellcheck\\\\Source\\\\SourceInterface will always evaluate to true\\.$#"
            path: %currentWorkingDirectory%/src/MisspellingFinder.php
        -
            message: "#^Call to static method Webmozart\\\\Assert\\\\Assert\\:\\:allIsInstanceOf\\(\\) with iterable\\<PhpSpellcheck\\\\Spellchecker\\\\SpellcheckerInterface\\> and 'PhpSpellcheck…' will always evaluate to true\\.$#"
            path: %currentWorkingDirectory%/src/Spellchecker/MultiSpellchecker.php

        # preg_* functions surely returning string as parameter is string
        -
            message: "#^Possibly invalid array key type array\\|string\\.$#"
            path: %currentWorkingDirectory%/src/Spellchecker/Hunspell.php
        -
            message: "#^Parameter \\#1 \\$text of static method PhpSpellcheck\\\\Text\\:\\:utf8\\(\\) expects string, array\\|string given\\.$#"
            path: %currentWorkingDirectory%/src/TextProcessor/MarkdownRemover.php
        -
            message: "#^Parameter \\#2 \\$str of function explode expects string, array\\|string given\\.$#"
            path: %currentWorkingDirectory%/src/Spellchecker/PHPPspell.php
        -
            message: "#^Binary operation \"\\.\" between '\"' and array\\|string results in an error\\.$#"
            path: %currentWorkingDirectory%/src/Utils/CommandLine.php

        # return type missanalysis
        -
            message: "#^Method PhpSpellcheck\\\\Spellchecker\\\\MultiSpellchecker\\:\\:check\\(\\) should return iterable\\<PhpSpellcheck\\\\Misspelling\\> but returns iterable\\.$#"
            path: %currentWorkingDirectory%/src/Spellchecker/MultiSpellchecker.php
        -
            message: "#^Method PhpSpellcheck\\\\Spellchecker\\\\MultiSpellchecker\\:\\:check\\(\\) should return iterable\\<PhpSpellcheck\\\\Misspelling\\> but returns array\\<int, PhpSpellcheck\\\\MisspellingInterface\\>\\.$#"
            path: %currentWorkingDirectory%/src/Spellchecker/MultiSpellchecker.php

        # Missing strict comparison
        - '#^Construct empty\(\) is not allowed. Use more strict comparison.$#'
        - '#^Only booleans are allowed in#'
